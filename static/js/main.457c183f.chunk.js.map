{"version":3,"sources":["api/trivia.js","components/Container.js","components/Header.js","components/Footer/style.js","components/Footer/index.js","components/Button.js","components/GameMenu/style.js","components/GameMenu/index.js","components/Question/style.js","components/Question/AnswerList.js","components/Question/index.js","api/giphy.js","keys.js","components/Divider.js","components/Results/style.js","components/Results/index.js","components/App.js","index.js"],"names":["fetchQuestions","settings","a","fetch","numberOfQuestions","difficulty","category","then","response","json","console","log","results","formatQuestions","fetchedQuestions","map","question","index","correct","incorrect","correct_answer","decode","incorrect_answers","answer","id","allAnswers","concat","sort","Math","random","guessedAnswer","questions","getQuestions","Container","styled","div","ContentContainer","Header","Logo","h1","Footer","href","Button","button","Title","h2","Form","form","Label","label","Select","select","StartGameBtn","GameMenu","startGame","useState","setSettings","onSubmit","e","preventDefault","value","onChange","target","type","QuestionBtn","props","selected","h4","Index","List","ul","ListItem","li","AnswerList","selectAnswer","onClick","Question","nextQuestion","submitAnswer","amountOfQuestions","fetchGif","responseText","data","Divider","QuestionTitle","correctGuess","ResultMsg","Gif","img","correctGuessBg","incorrectGuessBg","correctAnswer","CorrectIcon","CheckCircleFill","IncorrectIcon","CircleWithCross","NewGameIcon","CircleWithPlus","NewGameBtn","Results","setGameStarted","resultGif","setResultGif","scoreResponse","useCallback","badScore","goodScore","score","i","length","round","getScorePercentage","floor","renderAnswers","answers","_","uniqueId","useEffect","src","images","downsized","url","alt","title","getScore","App","setQuestions","currentQuestion","setCurrentQuestion","gameStarted","gameCompleted","setGameCompleted","findIndex","includes","newGame","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.457c183f.chunk.js","sourcesContent":["import { decode } from 'html-entities';\n\nasync function fetchQuestions(settings) {\n  const response = await fetch(\n    `https://opentdb.com/api.php?amount=${settings.numberOfQuestions}&difficulty=${settings.difficulty}&category=${settings.category}`\n  ).then((response) => response.json());\n  console.log(response.results);\n  return response.results;\n}\n\nfunction combineAnswers(correct, incorrect) {\n  return incorrect.concat(correct).sort(() => Math.random() - 0.5);\n}\n\nfunction formatQuestions(fetchedQuestions) {\n  return fetchedQuestions.map((question, index) => {\n    const correct_answer = decode(question.correct_answer);\n    const incorrect_answers = question.incorrect_answers.map((answer) => decode(answer));\n    return {\n      id: index,\n      question: decode(question.question),\n      category: question.category,\n      incorrect_answers: incorrect_answers,\n      correct_answer: correct_answer,\n      allAnswers: combineAnswers(correct_answer, incorrect_answers),\n      guessedAnswer: '',\n    };\n  });\n}\n\nasync function getQuestions(settings) {\n  const questions = await fetchQuestions(settings).then((response) => formatQuestions(response));\n  return questions;\n}\n\nexport default getQuestions;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 2em;\n  padding-top: 0;\n  padding-bottom: 4em;\n  box-sizing: border-box;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const ContentContainer = styled.div`\n  min-height: 100vh;\n  width: 100%;\n  box-sizing: border-box;\n  position: relative;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport const Header = styled.div`\n  width: 100%;\n  height: 4em;\n  margin-bottom: 2em;\n  display: inline-flex;\n  align-items: center;\n`;\nexport const Logo = styled.h1`\n  font-family: 'Shadows Into Light', cursive;\n  font-size: 2rem;\n  margin-top: 0.25em;\n  margin-bottom: 0;\n  margin-left: 2em;\n  color: #27ae60;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 4em;\n\n  background: #f2f2f2;\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n`;\n","import React from 'react';\nimport { Container } from './style';\n\nexport const Footer = () => {\n  return (\n    <Container>\n      <p>\n        made with ❤️ by <a href=\"https://github.com/edehlol/quiz\">edehlol</a>\n      </p>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  background: ${'#e0e0e0'};\n  border: none;\n  border-radius: 8px;\n  padding: 1em;\n  margin-bottom: 2em;\n  width: 15em;\n  font-size: 1rem;\n  font-family: 'Source Sans Pro', sans-serif;\n  &:focus {\n    outline: none;\n  }\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\nimport { Button } from '../Button';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Title = styled.h2`\n  margin-top: 0;\n`;\n\nexport const Form = styled.form`\n  padding: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 0.5em;\n  font-weight: 600;\n`;\n\nexport const Select = styled.select`\n  width: 100%;\n  height: 3em;\n  padding-left: 0.5em;\n  padding-right: 1em;\n  border-radius: 4px;\n  margin-bottom: 2em;\n`;\n\nexport const StartGameBtn = styled(Button)`\n  margin-top: 2em;\n  background: #2f80ed;\n  color: white;\n  font-weight: 600;\n`;\n","import React, { useState } from 'react';\nimport { Form, StartGameBtn, Select, Label, Title } from './style';\nimport { Container } from '../Container';\n\nexport const GameMenu = ({ startGame }) => {\n  const [settings, setSettings] = useState({\n    numberOfQuestions: 10,\n    difficulty: '',\n    category: 0,\n  });\n\n  const onFormSubmit = (e) => {\n    e.preventDefault();\n    startGame(settings);\n  };\n  // const onSelectNumberOfQuestions = (e) => {\n  //   setSettings({ ...settings, numberOfQuestions: e.target.value });\n  // };\n  const onChangeCategory = (e) => {\n    setSettings({ ...settings, category: e.target.value });\n  };\n  const onSelectDifficulty = (e) => {\n    console.log(e.target.value);\n    setSettings({ ...settings, difficulty: e.target.value });\n  };\n  return (\n    <Container>\n      <Title>Settings</Title>\n      <Form onSubmit={onFormSubmit}>\n        {/* <Label>Number of Questions</Label>\n        <Select value={settings.numberOfQuestions} onChange={onSelectNumberOfQuestions}>\n          <option value={5}>5</option>\n          <option value={10}>10</option>\n          <option value={15}>15</option>\n          <option value={20}>20</option>\n        </Select> */}\n\n        <Label>Select Category</Label>\n        <Select value={settings.category} onChange={onChangeCategory}>\n          <option value={0}>Any Category</option>\n          <option value={9}>General Knowledge</option>\n          <option value={10}>Entertainment: Books</option>\n          <option value={11}>Entertainment: Film</option>\n          <option value={12}>Entertainment: Music</option>\n          <option value={13}>Entertainment: Musicals & Theatres</option>\n          <option value={14}>Entertainment: Television</option>\n          <option value={15}>Entertainment: Video Games</option>\n          <option value={16}>Entertainment: Board Games</option>\n          <option value={29}>Entertainment: Comics</option>\n          <option value={31}>Entertainment: Japanese Anime & Manga</option>\n          <option value={32}>Entertainment: Cartoon & Aminations</option>\n          <option value={17}>Science & Nature</option>\n          <option value={18}>Science: Computers</option>\n          <option value={19}>Science: Mathematics</option>\n          <option value={30}>Science: Gadgets</option>\n          <option value={20}>Mythology</option>\n          <option value={21}>Sports</option>\n          <option value={22}>Geography</option>\n          <option value={23}>History</option>\n          <option value={24}>Politics</option>\n          <option value={25}>Art</option>\n          <option value={26}>Celebrities</option>\n          <option value={27}>Animals</option>\n          <option value={28}>Vehicles</option>\n        </Select>\n\n        <Label>Select Difficulty</Label>\n        <Select value={settings.difficulty} onChange={onSelectDifficulty}>\n          <option value={''}>Any Difficulty</option>\n          <option value={'easy'}>Easy</option>\n          <option value={'medium'}>Medium</option>\n          <option value={'hard'}>Hard</option>\n        </Select>\n\n        <StartGameBtn type=\"submit\">Start Game</StartGameBtn>\n      </Form>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nimport { Button } from '../Button';\n\nexport const QuestionBtn = styled(Button)`\n  background: #e0e0e0;\n  color: black;\n  font-weight: 400;\n  box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 25%);\n  &:hover {\n    background: ${(props) => (props.selected ? '#4F4F4F' : '#bdbdbd')};\n    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 50%);\n    font-weight: 600;\n  }\n  &:active {\n    background: #4f4f4f;\n    color: #f2f2f2;\n    font-weight: 600;\n  }\n`;\nexport const Title = styled.h4`\n  font-family: 'Montserrat', sans-serif;\n  font-size: 1.5rem;\n  font-weight: 400;\n  margin-bottom: 2em;\n  text-align: left;\n`;\nexport const Index = styled.h4`\n  font-size: 1.5rem;\n  font-weight: 600;\n  text-align: center;\n  margin-bottom: 0;\n  margin-top: 0;\n`;\n\n// AnswerList\n\nexport const List = styled.ul`\n  padding-left: 0;\n  margin-bottom: 2em;\n`;\nexport const ListItem = styled.li`\n  list-style-type: none;\n`;\n","import React from 'react';\nimport { List, ListItem } from './style';\n\nexport const AnswerList = ({ question, QuestionBtn, selectAnswer }) => {\n  function renderAnswers() {\n    return question.allAnswers.map((answer, index) => {\n      return (\n        <ListItem key={index}>\n          <QuestionBtn onClick={() => selectAnswer(answer)}>{answer}</QuestionBtn>\n        </ListItem>\n      );\n    });\n  }\n  return <List>{renderAnswers()}</List>;\n};\n","import React from 'react';\nimport { Title, QuestionBtn, Index } from './style';\nimport { Container } from '../Container';\nimport { decode } from 'html-entities';\nimport { AnswerList } from './AnswerList';\n\nexport const Question = ({ question, nextQuestion, submitAnswer, amountOfQuestions }) => {\n  const onSelectAnswer = (answer) => {\n    submitAnswer(answer);\n    nextQuestion();\n  };\n  return (\n    <Container>\n      <Index>\n        {question.id} / {amountOfQuestions}\n      </Index>\n      <Title>{decode(question.question)}</Title>\n      <p>Category: {question.category}</p>\n      <AnswerList question={question} selectAnswer={onSelectAnswer} QuestionBtn={QuestionBtn} />\n    </Container>\n  );\n};\n","import { giphyKey } from '../keys';\n\nexport const fetchGif = async (responseText) => {\n  const response = await fetch(\n    `https://api.giphy.com/v1/gifs/search?api_key=${giphyKey}&q=${responseText}&limit=1&offset=0&rating=g&lang=en`\n  ).then((response) => response.json());\n  console.log(response.data[0]);\n  return response.data[0];\n};\n","export const giphyKey = 'B7vQThLCaJ3KROTD7Dgf6JgRqIMVn9Gj';\n","import styled from 'styled-components';\n\nexport const Divider = styled.div`\n  height: 2px;\n  background: #e0e0e0;\n  width: 24em;\n  margin-bottom: 2em;\n`;\n","import styled from 'styled-components';\nimport { Button } from '../Button';\n\nimport { CheckCircleFill } from '@styled-icons/bootstrap/';\nimport { CircleWithCross } from '@styled-icons/entypo/';\nimport { CircleWithPlus } from '@styled-icons/entypo/';\nimport { Divider } from '../Divider';\n\nexport const QuestionTitle = styled.h4`\n  color: ${({ correctGuess }) => (correctGuess ? '#27AE60' : '#EB5757')};\n`;\nexport const ResultMsg = styled.h4`\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\nexport const Gif = styled.img`\n  max-width: 100%;\n`;\nexport const List = styled.ul`\n  list-style-type: none;\n  padding-left: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const ListItem = styled.li`\n  display: inline-grid;\n  width: 16em;\n  grid-template-columns: 80% 20%;\n  margin: 1em;\n  padding: 1em;\n  border-radius: 8px;\n  background: ${({ correctGuessBg, incorrectGuessBg }) =>\n    correctGuessBg ? '#27AE60' : incorrectGuessBg ? '#EB5757' : '#E0E0E0'};\n  color: ${({ correctGuessBg, incorrectGuessBg, correctAnswer }) =>\n    correctGuessBg || incorrectGuessBg ? '#FFFFFF' : correctAnswer ? '#27AE60' : '#000000'};\n  font-weight: ${({ correctGuessBg, incorrectGuessBg, correctAnswer }) =>\n    correctGuessBg || incorrectGuessBg || correctAnswer ? '600' : '400'};\n  box-sizing: border-box;\n  border: ${({ correctAnswer }) => (correctAnswer ? '2px solid #27AE60' : 'none')};\n`;\nexport const CorrectIcon = styled(CheckCircleFill)`\n  height: 1.5em;\n  color: white;\n`;\nexport const IncorrectIcon = styled(CircleWithCross)`\n  height: 1.5em;\n  color: white;\n`;\nexport const NewGameIcon = styled(CircleWithPlus)`\n  height: 1.5em;\n  color: white;\n`;\nexport const NewGameBtn = styled(Button)`\n  display: inline-grid;\n  align-items: center;\n  grid-template-columns: 80% 20%;\n  width: 16em;\n  height: 3.5em;\n  background: #2f80ed;\n  color: white;\n  font-weight: 600;\n  &:hover {\n    background: #2159a4;\n  }\n`;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { fetchGif } from '../../api/giphy';\nimport _ from 'lodash';\nimport {\n  ListItem,\n  CorrectIcon,\n  IncorrectIcon,\n  QuestionTitle,\n  List,\n  ResultMsg,\n  NewGameBtn,\n  NewGameIcon,\n  Gif,\n} from './style';\nimport { Divider } from '../Divider';\nimport { Container } from '../Container';\nexport const Results = ({ questions, setGameStarted }) => {\n  const [resultGif, setResultGif] = useState(null);\n\n  const scoreResponse = useCallback((questions) => {\n    const badScore = ['Damn', \"That's bad\", 'Oh no', 'Try again'];\n    const goodScore = ['Well Done', \"That's amazing!\", 'You are great'];\n    const score = getScorePercentage(questions);\n\n    if (score < 50) {\n      return badScore[Math.floor(Math.random() * badScore.length)];\n    } else {\n      return goodScore[Math.floor(Math.random() * goodScore.length)];\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchGif(scoreResponse(questions)).then((response) => setResultGif(response));\n  }, [questions, scoreResponse]);\n\n  function onNewGame() {\n    setGameStarted(false);\n  }\n  function getScore(questions) {\n    if (!questions) {\n      return;\n    }\n    let score = 0;\n    for (let i = 0; i < questions.length; i++) {\n      if (questions[i].guessedAnswer === questions[i].correct_answer) {\n        score += 1;\n      }\n    }\n    return score;\n  }\n  function getScorePercentage(questions) {\n    let score = 0;\n    for (let i = 0; i < questions.length; i++) {\n      if (questions[i].guessedAnswer === questions[i].correct_answer) {\n        score += 1;\n      }\n    }\n    return Math.round((score / questions.length) * 100);\n  }\n  function renderAnswers(answers, index) {\n    return answers.map((answer) => {\n      return (\n        <ListItem\n          key={_.uniqueId()}\n          correctGuessBg={\n            answer === questions[index].correct_answer && answer === questions[index].guessedAnswer\n              ? true\n              : false\n          }\n          incorrectGuessBg={\n            answer !== questions[index].correct_answer && answer === questions[index].guessedAnswer\n              ? true\n              : false\n          }\n          correctAnswer={\n            answer === questions[index].correct_answer && answer !== questions[index].guessedAnswer\n              ? true\n              : false\n          }\n        >\n          {answer}\n          {answer === questions[index].guessedAnswer ? (\n            answer === questions[index].correct_answer ? (\n              <CorrectIcon />\n            ) : (\n              <IncorrectIcon />\n            )\n          ) : null}\n        </ListItem>\n      );\n    });\n  }\n\n  function renderResults() {\n    return questions.map((question, index) => {\n      return (\n        <div key={index}>\n          <QuestionTitle correctGuess={question.correct_answer === question.guessedAnswer}>\n            Q: {question.question}\n          </QuestionTitle>\n          <List>{renderAnswers(question.allAnswers, index)}</List>\n        </div>\n      );\n    });\n  }\n  return (\n    <Container>\n      <ResultMsg>{scoreResponse(questions)}</ResultMsg>\n      {resultGif && <Gif src={resultGif.images.downsized.url} alt={resultGif.title} />}\n      <h2>\n        Correct: {getScore(questions)}/{questions.length}\n      </h2>\n      {renderResults()}\n      <Divider />\n      <NewGameBtn onClick={onNewGame}>\n        New Game\n        <NewGameIcon />\n      </NewGameBtn>\n    </Container>\n  );\n};\n","import React, { useState } from 'react';\nimport getQuestions from '../api/trivia';\nimport { ContentContainer } from './Container';\nimport { Header, Logo } from './Header';\nimport { Footer } from './Footer/';\nimport { GameMenu } from './GameMenu/';\nimport { Question } from './Question/';\nimport { Results } from './Results/';\n\nconst App = () => {\n  const [questions, setQuestions] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameCompleted, setGameCompleted] = useState(false);\n\n  function setFirstQuestion(questionArray) {\n    setCurrentQuestion(questionArray[0]);\n  }\n\n  function nextQuestion() {\n    if (\n      questions.findIndex((question) => question.id === currentQuestion.id) ===\n      questions.length - 1\n    ) {\n      setGameCompleted(true);\n    } else {\n      setCurrentQuestion(\n        questions[questions.findIndex((question) => question.id === currentQuestion.id) + 1]\n      );\n    }\n  }\n  function submitAnswer(answer) {\n    setQuestions(\n      questions.map((question) => {\n        return question.allAnswers.includes(answer)\n          ? { ...question, guessedAnswer: answer }\n          : question;\n      })\n    );\n  }\n\n  function newGame(settings) {\n    getQuestions(settings).then((response) => {\n      setQuestions(response);\n      setGameStarted(true);\n      setFirstQuestion(response);\n    });\n    setGameCompleted(false);\n  }\n  const renderView = () => {\n    if (!gameStarted) {\n      return <GameMenu startGame={newGame} />;\n    } else {\n      if (gameCompleted) {\n        return <Results newGame={newGame} questions={questions} setGameStarted={setGameStarted} />;\n      } else {\n        return (\n          <div>\n            {currentQuestion && (\n              <Question\n                question={currentQuestion}\n                amountOfQuestions={questions.length}\n                nextQuestion={nextQuestion}\n                submitAnswer={submitAnswer}\n              />\n            )}\n          </div>\n        );\n      }\n    }\n  };\n  return (\n    <ContentContainer>\n      <Header>\n        <Logo>Quizzly</Logo>\n      </Header>\n      {renderView()}\n      <Footer />\n    </ContentContainer>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}